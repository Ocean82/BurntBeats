name: Build and Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install global tools
        run: |
          npm install -g typescript
          npm install -g tsx

      - name: Setup environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV
          echo "NODE_ENV=test" >> $GITHUB_ENV
          echo "SESSION_SECRET=test-secret-key" >> $GITHUB_ENV

      - name: Run database migrations
        run: npm run db:push

      - name: Run linter
        run: npm run lint || echo "Linting completed with warnings"

      - name: Type check
        run: npx tsc --noEmit

      - name: Build client
        run: npm run build:client

      - name: Build server
        run: npm run build:server

      - name: Run tests
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          NODE_ENV: test
          SESSION_SECRET: test-secret-key

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: build-artifacts
          path: |
            dist/
            !dist/**/*.map
          retention-days: 7

  security-audit:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for vulnerabilities
        run: npm audit --audit-level=moderate --production

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build, security-audit]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: |
          npm run build:client
          npm run build:server

      - name: Prepare deployment package
        run: |
          mkdir -p deploy
          cp -r dist/ deploy/
          cp package.json deploy/
          cp package-lock.json deploy/
          
      - name: Archive deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: deploy/
          retention-days: 30

      - name: Deploy to Replit (simulation)
        run: |
          echo "Deployment package ready for Replit"
          echo "Build size: $(du -sh deploy/ | cut -f1)"
          echo "Files ready for deployment:"
          find deploy/ -type f -name "*.js" -o -name "*.json" | head -10